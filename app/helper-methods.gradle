///////////////////////////////////////////////////////////////////////////
// Common useful methods
///////////////////////////////////////////////////////////////////////////

/**
 * Checks whether superstring contains one of given substrings.<br />
 * NOTE: case matters!
 */
@SuppressWarnings("GroovyUnusedDeclaration")
def boolean containsAnyOf(String superstring, String... substrings) {
   if (substrings.length == 0 || (superstring == null || superstring.isEmpty())) return false
   //
   for (int i = 0; i < substrings.length; i++) {
      if (superstring.contains(substrings[i])) return true
   }
   //
   return false
}

/**
 * Checks whether superstring equals one of given substrings.<br />
 * NOTE: case matters!
 */
@SuppressWarnings("GroovyUnusedDeclaration")
def boolean equalsAnyOf(String superstring, String... substrings) {
   if (substrings.length == 0 || (superstring == null || superstring.isEmpty())) return false
   //
   for (int i = 0; i < substrings.length; i++) {
      if (superstring.equals(substrings[i])) return true
   }
   //
   return false
}

/**
 * Get the first substring that given super contains.<br />
 * Returns empty String if no match.<br />
 * NOTE: case matters!
 */
@SuppressWarnings("GroovyUnusedDeclaration")
def String oneOfSubstrings(String superstring, String... substrings) {
   if (substrings.length == 0 || (superstring == null || superstring.isEmpty())) return ""
   //
   for (int i = 0; i < substrings.length; i++) {
      if (superstring.contains(substrings[i])) return substrings[i]
   }
   //
   return ""
}

/**
 * Logs message during build so that it is visible in "Messages\ view in IDE
 * @param allowLog whether allow logging. Put constant here for easy log toggle
 * @param logTag tag to find particular log. Put constant or whatever
 * @param logMessage message to log
 */
@SuppressWarnings("GroovyUnusedDeclaration")
def writeBuildLog(boolean allowLog, String logTag, String logMessage) {
   if (allowLog)
      logger.lifecycle("${logTag} :: ${logMessage}")
   //
   return
}

ext {
   containsAnyOf = this.&containsAnyOf
   equalsAnyOf = this.&equalsAnyOf
   oneOfSubstrings = this.&oneOfSubstrings
   writeBuildLog = this.&writeBuildLog
}
