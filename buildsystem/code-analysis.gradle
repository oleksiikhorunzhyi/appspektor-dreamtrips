apply plugin: 'checkstyle'
apply plugin: 'pmd'
//apply plugin: 'findbugs'
apply plugin: 'jacoco'

check.dependsOn 'analizeCode'

task analizeCode() {
   dependsOn 'checkstyle'//, 'pmd', 'findbugs'
}

checkstyle {
   toolVersion = "8.3"
}

task checkstyle(type: Checkstyle) {
   configFile file("${project.rootDir}/quality/checkstyle/checkstyle.xml")
   configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/quality/checkstyle/suppressions.xml").absolutePath
   source 'src'
   include '**/*.java'
   exclude '**/gen/**', 'test*/**'
   classpath = files()

   reports {
      xml.enabled true
      html.enabled true
      html.stylesheet resources.text.fromFile("${project.rootDir}/quality/checkstyle/checkstyle-report-template.xsl")
   }
}

task pmd(type: Pmd) {
   ignoreFailures = false
   ruleSetFiles = files("${project.rootDir}/quality/pmd/pmd-ruleset.xml")
   ruleSets = []

   source 'src'
   include '**/*.java'
   exclude '**/gen/**'

   reports {
      xml.enabled = true
      html.enabled = true
      xml {
         destination "$project.buildDir/reports/pmd/pmd.xml"
      }
      html {
         destination "$project.buildDir/reports/pmd/pmd.html"
      }
   }
}

task findbugs(type: FindBugs) {
   ignoreFailures = false
   effort = "max"
   reportLevel = "high"
   excludeFilter = new File("${project.rootDir}/quality/findbugs/findbugs-filter.xml")
   classes = files("${project.rootDir}/build/intermediates/classes")

   source 'src'
   include '**/*.java'
   exclude '**/gen/**'

   reports {
      xml.enabled = false
      html.enabled = true
      xml {
         destination "$project.buildDir/reports/findbugs/findbugs.xml"
      }
      html {
         destination "$project.buildDir/reports/findbugs/findbugs.html"
      }
   }

   classpath = files()
}
