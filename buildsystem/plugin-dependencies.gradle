ext {
   pluginDependencies = [:]
   pluginDependencies.versions = [
         java  : '1.8',
         kotlin: '1.2.0',
         detekt: '1.0.0.RC5-6'
   ]
   pluginDependencies.repos = [
         { o -> o.jcenter() },
         { o -> o.google() },
         { o -> o.maven { url 'https://plugins.gradle.org/m2' } },
         { o -> o.maven { url 'https://maven.fabric.io/public' } }
   ]
   pluginDependencies << [
         androidDefault: '3.0.1',
         // gradle 2.3.3 uses proguard v5.3.2 (https://sourceforge.net/p/proguard/bugs/638/)
         proguard      : 'net.sf.proguard:proguard-gradle:5.2',
         kotlin        : "org.jetbrains.kotlin:kotlin-gradle-plugin:$pluginDependencies.versions.kotlin",

         newrelic      : 'com.newrelic.agent.android:agent-gradle-plugin:5.8.4',
         fabric        : 'io.fabric.tools:gradle:1.24.1',

         versionChecker: 'com.github.ben-manes:gradle-versions-plugin:0.14.0',

         detekt        : "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${pluginDependencies.versions.detekt}",
         ktlint        : "gradle.plugin.org.jmailen.gradle:kotlinter-gradle:1.3.2"
   ]

   pluginDependencies.android = {
      androidPluginVersion = pluginDependencies.androidDefault
      def propsFile = rootProject.file('./buildscript.properties')
      if (propsFile.exists()) {
         Properties props = new Properties()
         props.load(new FileInputStream(propsFile))
         if (props.androidPluginVersion) {
            androidPluginVersion = props.androidPluginVersion
         }
      }
      logger.info("Android Plugin version: $androidPluginVersion")
      return "com.android.tools.build:gradle:$androidPluginVersion"
   }()
}
