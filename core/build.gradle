apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
//
apply from: "$rootProject.projectDir/buildsystem/android-config.gradle"
apply from: "$rootProject.projectDir/buildsystem/app-config.gradle"
apply from: "$rootProject.projectDir/buildsystem/plugin-dependencies.gradle"
apply from: "$rootProject.projectDir/buildsystem/module-dependencies.gradle"
apply from: "$rootProject.projectDir/buildsystem/code-analysis.gradle"

android {
   compileSdkVersion project.ext.androidConfig.compileSdk
   buildToolsVersion project.ext.androidConfig.buildTools

   defaultConfig {
      minSdkVersion project.ext.androidConfig.minSdk
      targetSdkVersion project.ext.androidConfig.targetSdk
      //
      multiDexEnabled true
   }

   dataBinding {
      enabled = true
   }

   buildTypes {
      debug {
         minifyEnabled false
      }
//      release {
//         minifyEnabled false
//         def proConfigs = file('proguard-rules').listFiles().collect { it }
//         proConfigs << getDefaultProguardFile('proguard-android.txt')
//         proConfigs << getDefaultProguardFile('proguard-android-optimize.txt')
//         proConfigs << file('dagger-proguard-keepnames.cfg')
//         setConsumerProguardFiles proConfigs
//      }
   }

   compileOptions {
      sourceCompatibility project.ext.pluginDependencies.versions.java
      targetCompatibility project.ext.pluginDependencies.versions.java
   }

}

def deps = project.ext.coreDependencies

configurations.all {
   resolutionStrategy {
      force provideDep(deps.rx.rxjava)
      force provideDep(deps.domain.mappery)
      force provideDep(deps.util.jetbrainsAnnotations)
   }
   exclude group: 'org.jetbrains', module: 'annotations-java5'
   exclude group: 'com.intellij', module: 'annotations'
}

repositories {
   deps.repos.each { it.call(owner) }
}

dependencies {
   compile fileTree(dir: 'libs', include: ['*.jar'])
   applyDependencies(owner, deps.di)
   applyDependencies(owner, deps.ui)
   applyDependencies(owner, deps.domain)
   applyDependencies(owner, deps.immutables)
   applyDependencies(owner, deps.networking)
   applyDependencies(owner, deps.analytics)
   applyDependencies(owner, deps.util)
   applyDependencies(owner, deps.rx)
}
